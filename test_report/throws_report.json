{
  "stats": {
    "suites": 19,
    "tests": 15,
    "passes": 6,
    "pending": 0,
    "failures": 9,
    "start": "2019-05-24T08:57:51.378Z",
    "end": "2019-05-24T08:57:55.991Z",
    "duration": 4613,
    "testsRegistered": 15,
    "passPercent": 40,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "b1e45141-8192-4c3f-86ff-ba7ae2a04eb1",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [
      {
        "title": "\"before all\" hook",
        "fullTitle": "\"before all\" hook",
        "timedOut": false,
        "duration": 4578,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "return new Promise((resolve, reject) => {\n    fetchData().then(() => resolve());\n});",
        "err": {},
        "isRoot": true,
        "uuid": "df705db7-8daf-4cd3-9d82-c74127630fc7",
        "isHook": true,
        "skipped": false
      }
    ],
    "afterHooks": [
      {
        "title": "\"after all\" hook",
        "fullTitle": "\"after all\" hook",
        "timedOut": false,
        "duration": 0,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "console.log('**** results ****');\nif(!args.sum && !args.separated_values) {\n    if(throws.length > 0) {\n        console.log('- Throws');\n        console.log(throws);\n        console.log('\\n');\n    }\n    if(throws_alt.length > 0) {\n        console.log('- Throws_alt');\n        console.log(throws_alt);\n    }\n} else if(args.sum && !args.separated_values){\n    for(let i = 0; i < throws.length; i++) {\n        let sum = 0;\n        for(let j = 0; j < throws[i].nb_dices; j++) {\n            sum += throws[i].dices_face[j];\n            console.log('Throw nÂ°' + (i + 1) + ' : ' + sum);\n        }\n    }\n} else if(!args.sum && args.separated_values) {\n    console.log('- Throws');\n    for(let i = 0; i < throws.length; i++) {\n        console.log(throws[i].dices_face);\n    }\n}",
        "err": {},
        "isRoot": true,
        "uuid": "0eb29654-05c6-4470-9b55-32f923f689ee",
        "isHook": true,
        "skipped": false
      }
    ],
    "tests": [],
    "suites": [
      {
        "uuid": "efd05ed7-ec82-4a90-9269-a890509b3ffd",
        "title": "Results",
        "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
        "file": "/test/test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return throws results",
            "fullTitle": "Results should return throws results",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "\"[{\\\"nb_dices\\\":1,\\\"nb_faces\\\":4,\\\"dices_face\\\":[2],\\\"result\\\":2}]\"",
            "code": "if(throws.length > 0) {\n    addContext(this, JSON.stringify(throws));\n}\nif(throws_alt.length > 0) {\n    addContext(this, JSON.stringify(throws_alt));\n}",
            "err": {},
            "isRoot": false,
            "uuid": "19e9c141-eef7-4260-94a6-c1780f8eb578",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "19e9c141-eef7-4260-94a6-c1780f8eb578"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 60000
      },
      {
        "uuid": "197f870d-d69e-4d83-a976-5f9395f14e26",
        "title": "Entries",
        "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
        "file": "/test/test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "d5218d0a-1641-4c96-924c-7ed7f0b3132c",
            "title": "Ensure inputs are integers",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return an integer > 0",
                "fullTitle": "Entries Ensure inputs are integers should return an integer > 0",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(throws).to.be.instanceOf(Array);\nexpect(throws).to.have.length.above(0);\nfor(let i = 0; i < throws.length; i++) {\n    expect(throws[i]).to.be.an('object');\n    expect(throws[i].nb_dices).to.be.a('number');\n    expect(throws[i].nb_dices).to.be.above(0);\n    expect(throws[i].nb_faces).to.be.a('number');\n    expect(throws[i].nb_faces).to.be.above(0);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "506d31ed-807d-4071-9d0e-deae6136ea9e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "506d31ed-807d-4071-9d0e-deae6136ea9e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 60000
      },
      {
        "uuid": "7409b516-2228-4094-9336-b4774055eca4",
        "title": "Throws",
        "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
        "file": "/test/test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "6253e169-3f04-446e-895f-046308a972bb",
            "title": "Number of dice not null && not above 100",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return a number > 0 and less or equal to 100",
                "fullTitle": "Throws Number of dice not null && not above 100 should return a number > 0 and less or equal to 100",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(throws[0].nb_dices).to.be.at.least(1);\nexpect(throws[0].nb_dices).not.to.be.above(100);",
                "err": {},
                "isRoot": false,
                "uuid": "e0d10454-02ce-4419-94ea-6e992498ab83",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e0d10454-02ce-4419-94ea-6e992498ab83"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          },
          {
            "uuid": "f14aa24f-4f96-4de7-9242-7cda5988710f",
            "title": "Number of faces between 2 and 100",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return a number >= 2 && <= 100",
                "fullTitle": "Throws Number of faces between 2 and 100 should return a number >= 2 && <= 100",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(throws[0].nb_faces).to.be.at.least(2);\nexpect(throws[0].nb_faces).not.to.be.above(100);",
                "err": {},
                "isRoot": false,
                "uuid": "286692ea-b876-4ec3-acf1-63d0aa435754",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "286692ea-b876-4ec3-acf1-63d0aa435754"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          },
          {
            "uuid": "80d1d7d5-c736-4896-8f76-30981f62c6b9",
            "title": "The sum is equal to the addition of the faces from all dices",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return a sum",
                "fullTitle": "Throws The sum is equal to the addition of the faces from all dices should return a sum",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(throws).to.be.an('array');\n             expect(throws[0].result).to.be.a('number');\n             expect(throws[0].result).to.be.above(0);",
                "err": {},
                "isRoot": false,
                "uuid": "be341aab-b8ba-4df8-93ca-87f6cfe90c44",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "be341aab-b8ba-4df8-93ca-87f6cfe90c44"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 60000
      },
      {
        "uuid": "6345f6f3-da54-4939-a386-36e749fb6ac8",
        "title": "Args",
        "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
        "file": "/test/test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "4bc12758-3f02-41dc-9f12-7d19739f7b5a",
            "title": "no arguments found",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "args length should be equals to 0",
                "fullTitle": "Args no arguments found args length should be equals to 0",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "expect(argSpliced).to.be.instanceOf(Array);\nexpect(argSpliced).to.have.lengthOf(0);",
                "err": {
                  "message": "ReferenceError: argSpliced is not defined",
                  "estack": "ReferenceError: argSpliced is not defined\n    at Context.<anonymous> (test/test.js:251:19)"
                },
                "isRoot": false,
                "uuid": "b4d79c01-05db-4ae3-9845-76d1c4a16206",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "b4d79c01-05db-4ae3-9845-76d1c4a16206"
            ],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          },
          {
            "uuid": "363782b9-664c-40be-bbae-6c47d45c437c",
            "title": "verbose found",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "verbose should be true",
                "fullTitle": "Args verbose found verbose should be true",
                "timedOut": false,
                "duration": 1,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "expect(args).to.be.an('object');\nexpect(args.verbose).to.be.equals(true);",
                "err": {
                  "message": "AssertionError: expected false to equal true",
                  "estack": "AssertionError: expected false to equal true\n    at Context.<anonymous> (test/test.js:259:39)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "da5f5b15-e7a5-4b8f-a2d3-ace5a6a063ef",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "da5f5b15-e7a5-4b8f-a2d3-ace5a6a063ef"
            ],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          },
          {
            "uuid": "a819ff18-7b13-4aac-add3-e530ac8cbd0b",
            "title": "sum found",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "sum should be true",
                "fullTitle": "Args sum found sum should be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(args).to.be.an('object');\nexpect(args.sum).to.be.equals(true);",
                "err": {},
                "isRoot": false,
                "uuid": "09111766-49e0-46fd-888e-89a88a7a83b5",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "09111766-49e0-46fd-888e-89a88a7a83b5"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          },
          {
            "uuid": "ad8584dc-1458-4b3f-b417-420b3878e221",
            "title": "separated-values found",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "separated-values should be true",
                "fullTitle": "Args separated-values found separated-values should be true",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "expect(args).to.be.an('object');\nexpect(args.separated_values).to.be.equals(true);",
                "err": {
                  "message": "AssertionError: expected false to equal true",
                  "estack": "AssertionError: expected false to equal true\n    at Context.<anonymous> (test/test.js:273:48)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "c1442fe9-f728-4599-8ed3-bd15f12aec99",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "c1442fe9-f728-4599-8ed3-bd15f12aec99"
            ],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          },
          {
            "uuid": "e550bc1b-ae20-4aac-bd4d-2bd6c64bc6ab",
            "title": "open found",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "open should be true",
                "fullTitle": "Args open found open should be true",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "expect(args).to.be.an('object');\nexpect(args.open).to.be.equals(true);",
                "err": {
                  "message": "AssertionError: expected false to equal true",
                  "estack": "AssertionError: expected false to equal true\n    at Context.<anonymous> (test/test.js:280:36)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "3bcd0caf-9b27-429e-963c-47bd8db9543c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "3bcd0caf-9b27-429e-963c-47bd8db9543c"
            ],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          },
          {
            "uuid": "311654c5-9987-4440-9f04-836b392d1d06",
            "title": "advantage found",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "advantage should be true",
                "fullTitle": "Args advantage found advantage should be true",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "expect(args).to.be.an('object');\nexpect(args.advantage).to.be.equals(true);",
                "err": {
                  "message": "AssertionError: expected false to equal true",
                  "estack": "AssertionError: expected false to equal true\n    at Context.<anonymous> (test/test.js:287:41)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "a2fece19-51d8-4f2b-9999-04785c644c37",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "a2fece19-51d8-4f2b-9999-04785c644c37"
            ],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          },
          {
            "uuid": "0bd190b2-aa83-49a4-a173-2365472d5c35",
            "title": "disadvantage found",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "disadvantage should be true",
                "fullTitle": "Args disadvantage found disadvantage should be true",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "expect(args).to.be.an('object');\nexpect(args.disadvantage).to.be.equals(true);",
                "err": {
                  "message": "AssertionError: expected false to equal true",
                  "estack": "AssertionError: expected false to equal true\n    at Context.<anonymous> (test/test.js:294:44)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "d0134cc4-0e63-4e6a-bb1e-9104206b6145",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "d0134cc4-0e63-4e6a-bb1e-9104206b6145"
            ],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 60000
      },
      {
        "uuid": "25b5db93-eb63-4343-baab-92cae1bf7eee",
        "title": "Throws_alt",
        "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
        "file": "/test/test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "05706b2e-29af-4623-b7ca-8aff4d790301",
            "title": "Number of dices not null && not above 100",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return a number > 0 and less or equal to 100",
                "fullTitle": "Throws_alt Number of dices not null && not above 100 should return a number > 0 and less or equal to 100",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "expect(throws_alt[0].nb_dices).to.be.at.least(1);\nexpect(throws_alt[0].nb_dices).not.to.be.above(100);",
                "err": {
                  "message": "TypeError: Cannot read property 'nb_dices' of undefined",
                  "estack": "TypeError: Cannot read property 'nb_dices' of undefined\n    at Context.<anonymous> (test/test.js:304:34)"
                },
                "isRoot": false,
                "uuid": "e8f23c35-5710-4099-8129-f9d1d4f0a9ea",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "e8f23c35-5710-4099-8129-f9d1d4f0a9ea"
            ],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          },
          {
            "uuid": "e6fbeca9-ec01-4704-adb3-4b7ae8cdc54f",
            "title": "Number of keeps <= number of dices",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return a number <= number of dices",
                "fullTitle": "Throws_alt Number of keeps <= number of dices should return a number <= number of dices",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "expect(throws_alt[0].nb_keep).to.be.at.least(0);\nexpect(throws_alt[0].nb_keep).not.to.be.above(throws_alt[0].nb_dices);",
                "err": {
                  "message": "TypeError: Cannot read property 'nb_keep' of undefined",
                  "estack": "TypeError: Cannot read property 'nb_keep' of undefined\n    at Context.<anonymous> (test/test.js:310:34)"
                },
                "isRoot": false,
                "uuid": "a68962c6-37e0-4164-9439-dd612ac2ce71",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "a68962c6-37e0-4164-9439-dd612ac2ce71"
            ],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          },
          {
            "uuid": "5ea4dd23-afcf-432d-add8-4b5d9a1d8263",
            "title": "The result is equal to the sum of the values kept",
            "fullFile": "/home/killiann/Desktop/imie-throw-dice/test/test.js",
            "file": "/test/test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return a sum",
                "fullTitle": "Throws_alt The result is equal to the sum of the values kept should return a sum",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "expect(throws_alt).to.be.instanceOf(Array);\n            expect(throws_alt[0].results).to.be.instanceOf(Array);\n            expect(throws_alt[0].results[0]).to.be.a('number');\n            expect(throws_alt[0].results[0]).to.be.above(0);",
                "err": {
                  "message": "TypeError: Cannot read property 'results' of undefined",
                  "estack": "TypeError: Cannot read property 'results' of undefined\n    at Context.<anonymous> (test/test.js:319:34)"
                },
                "isRoot": false,
                "uuid": "51c42534-01cd-401d-bef5-128c66295481",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "51c42534-01cd-401d-bef5-128c66295481"
            ],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 60000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 60000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 60000
  },
  "copyrightYear": 2019
}